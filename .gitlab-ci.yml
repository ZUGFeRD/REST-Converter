image: maven:3.9-eclipse-temurin-17

variables:
  MAVEN_CLI_OPTS: "-f pom.xml -s maven/setting_ci.xml --batch-mode --errors --fail-at-end --show-version"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  DOMAIN: "martin.usegroup.de"
  DOCKER_ENV_FILE: ./docker/.env

cache:
  paths:
    - .m2/repository/
    - target/
    - DOCKER_ENV_FILE
  key: "$CI_COMMIT_REF_SLUG"

stages:
  - init
  - setup
  - check
  - build
  - test
  - analyze
  - visualize
  - release
  - package
  - deploy

init:
  stage: init
  script:
    - mvn $MAVEN_CLI_OPTS clean

setup:
  stage: setup
  before_script:
    - apt-get update -y && apt-get install -y libxml2-utils
    - export MUSTANG_SERVER_VERSION=$(xmllint --xpath "//*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
    - echo "MUSTANG_SERVER_VERSION=$MUSTANG_SERVER_VERSION" > DOCKER_ENV_FILE
  script:
    - echo "Setup complete with XML tools and Mustang Server Version $MUSTANG_SERVER_VERSION"


build:
  stage: build
  before_script:
    - source DOCKER_ENV_FILE
  script:
    - mvn $MAVEN_CLI_OPTS -DskipTests package

test:
  stage: test
  before_script:
    - source DOCKER_ENV_FILE
  script:
    - mvn $MAVEN_CLI_OPTS org.jacoco:jacoco-maven-plugin:prepare-agent test org.jacoco:jacoco-maven-plugin:report
  after_script:
    - cat target/site/jacoco/index.html | grep -o 'Total[^%]*%'
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    name: "Maven artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    paths:
      - target/site/jacoco/jacoco.xml
    expire_in: 1 week


visualize:
  stage: visualize
  image: haynes/jacoco2cobertura:latest
  script:
    - python /opt/cover2cover.py target/site/jacoco/jacoco.xml src/main/java > target/site/cobertura.xml
  needs: [ "test" ]
  dependencies:
    - test
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: target/site/cobertura.xml
    expire_in: 1 week


release-artifact:
  stage: release
  before_script:
    - source DOCKER_ENV_FILE
  script:
    - mvn $MAVEN_CLI_OPTS -DskipTests deploy


build-docker-master:
  image: docker:24.0.5
  stage: package
  services:
    - docker:24.0.5-dind
  before_script:
    - source DOCKER_ENV_FILE
    - export $(grep -vE '^\s*#|^\s*$' $DOCKER_ENV_FILE | xargs)
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build -f ./docker/Dockerfile --tag $CI_REGISTRY_IMAGE:latest --build-arg MUSTANG_SERVER_VERSION=$MUSTANG_SERVER_VERSION .
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - master

build-docker-rc:
  image: docker:24.0.5
  stage: release
  services:
    - docker:24.0.5-dind
  before_script:
    - source DOCKER_ENV_FILE
    - export $(grep -vE '^\s*#|^\s*$' $DOCKER_ENV_FILE | xargs)
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - export TAG_VERSION=$(echo $CI_COMMIT_REF_NAME | sed 's/rc-//')
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build -f ./docker/Dockerfile --tag $CI_REGISTRY_IMAGE:$TAG_VERSION --build-arg MUSTANG_SERVER_VERSION=$MUSTANG_SERVER_VERSION .
    - docker push $CI_REGISTRY_IMAGE:$TAG_VERSION
  only:
    - /^release-.*$/
    - /^rc-.*$/

deploy-ssh:
  stage: deploy
  when: manual
  before_script:
    - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - chmod 400 "$SSH_PRIVATE_KEY"
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan martin.usegroup.de >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - export $(grep -vE '^\s*#|^\s*$' $DOCKER_ENV_FILE | xargs)
  script:
    - scp -r ./docker $User_Key@$DOMAIN:/DevOp/mustang
    - ssh $User_Key@$DOMAIN "cd /DevOp/mustang/docker ; sed -i 's/^CI_COMMIT_REF_SLUG=.*/CI_COMMIT_REF_SLUG=$CI_COMMIT_REF_SLUG/' .env"
    - ssh $User_Key@$DOMAIN "cd /DevOp/mustang/docker ; sed -i 's/^MUSTANG_SERVER_VERSION=.*/MUSTANG_SERVER_VERSION=$MUSTANG_SERVER_VERSION/' .env"
    - ssh $User_Key@$DOMAIN "cd /DevOp/mustang ; docker-compose -f ./docker/docker-compose-ci.local.yml up -d --build --force-recreate"


